// ignore_for_file: non_constant_identifier_names
// ignore_for_file: camel_case_types
// ignore_for_file: prefer_single_quotes

// This file is automatically generated. DO NOT EDIT, all your changes would be lost.
import 'package:flutterapp/home/entity/home_article_list_entity.dart';
import 'package:flutterapp/generated/json/home_article_list_entity_helper.dart';
import 'package:flutterapp/home/entity/home_banner_entity.dart';
import 'package:flutterapp/generated/json/home_banner_entity_helper.dart';

class JsonConvert<T> {
	T fromJson(Map<String, dynamic> json) {
		return _getFromJson<T>(runtimeType, this, json);
	}

  Map<String, dynamic> toJson() {
		return _getToJson<T>(runtimeType, this);
  }

  static _getFromJson<T>(Type type, data, json) {
    switch (type) {			case HomeArticleListEntity:
			return homeArticleListEntityFromJson(data as HomeArticleListEntity, json) as T;			case HomeArticleListData:
			return homeArticleListDataFromJson(data as HomeArticleListData, json) as T;			case HomeArticleListDataData:
			return homeArticleListDataDataFromJson(data as HomeArticleListDataData, json) as T;			case HomeArticleListDataDataTag:
			return homeArticleListDataDataTagFromJson(data as HomeArticleListDataDataTag, json) as T;			case HomeBannerEntity:
			return homeBannerEntityFromJson(data as HomeBannerEntity, json) as T;			case HomeBannerData:
			return homeBannerDataFromJson(data as HomeBannerData, json) as T;    }
    return data as T;
  }

  static _getToJson<T>(Type type, data) {
		switch (type) {			case HomeArticleListEntity:
			return homeArticleListEntityToJson(data as HomeArticleListEntity);			case HomeArticleListData:
			return homeArticleListDataToJson(data as HomeArticleListData);			case HomeArticleListDataData:
			return homeArticleListDataDataToJson(data as HomeArticleListDataData);			case HomeArticleListDataDataTag:
			return homeArticleListDataDataTagToJson(data as HomeArticleListDataDataTag);			case HomeBannerEntity:
			return homeBannerEntityToJson(data as HomeBannerEntity);			case HomeBannerData:
			return homeBannerDataToJson(data as HomeBannerData);    }
    return data as T;
  }
  //Go back to a single instance by type
  static _fromJsonSingle(String type, json) {
    switch (type) {			case 'HomeArticleListEntity':
			return HomeArticleListEntity().fromJson(json);			case 'HomeArticleListData':
			return HomeArticleListData().fromJson(json);			case 'HomeArticleListDataData':
			return HomeArticleListDataData().fromJson(json);			case 'HomeArticleListDataDataTag':
			return HomeArticleListDataDataTag().fromJson(json);			case 'HomeBannerEntity':
			return HomeBannerEntity().fromJson(json);			case 'HomeBannerData':
			return HomeBannerData().fromJson(json);    }
    return null;
  }

  //empty list is returned by type
  static _getListFromType(String type) {
    switch (type) {			case 'HomeArticleListEntity':
			return List<HomeArticleListEntity>();			case 'HomeArticleListData':
			return List<HomeArticleListData>();			case 'HomeArticleListDataData':
			return List<HomeArticleListDataData>();			case 'HomeArticleListDataDataTag':
			return List<HomeArticleListDataDataTag>();			case 'HomeBannerEntity':
			return List<HomeBannerEntity>();			case 'HomeBannerData':
			return List<HomeBannerData>();    }
    return null;
  }

  static M fromJsonAsT<M>(json) {
    String type = M.toString();
    if (json is List && type.contains("List<")) {
      String itemType = type.substring(5, type.length - 1);
      List tempList = _getListFromType(itemType);
      json.forEach((itemJson) {
        tempList
            .add(_fromJsonSingle(type.substring(5, type.length - 1), itemJson));
      });
      return tempList as M;
    } else {
      return _fromJsonSingle(M.toString(), json) as M;
    }
  }
}